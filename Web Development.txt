<a target ="_blank"> لجعل المتصفح يفتح صفحة جديده

اصح هيكلية لصفحة html
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="description" content="This page for discation about computer scince" />
        <title>Prantheces</title>
    </head>
    <body>

    </body>
</html>

to marge css with html
<link rel="stylesheet" href="dir of css file ">

HTML5

العناصر التي استبدلت
<abbr title="hybertext markup language">html</abbr>
هذا التاغ يكتب بداخله كلمه عند وضع المؤشر علية يظهر الوصف المكتوب في التايتل

من العناصر التي اضيفت
<header></header>
هذا التاغ يشير الى راس الصفحة
<nav></nav>
هذا التاغ يشير الى النافيكيشن بار
<article></article>
تاغ جديد يتم وضع فيه مقالات او ما شابه ويمكن وضع تاغ الراس او اي تاغ ثاني بداخله
<footer></footer>
ذيل الصفحة
<section></section>
قسم او جزء من قسم معين يكتب في اي مكان في الصفحة
<main></main>
هو تاغ لايتكرر في الصفحة يستخدم مره واحده فقط يوضع بداخله ما تشاء بشرط ان هذا التاغ لا يتكرر مره ثانيه ويوضع في اي مكان في الصفحة
<aside></aside>
يستخدم فيه اي شيء وعادة يستخم في عمل البار الجانبي
<detalis></detalis>
هو تاغ يوضع بداخله محتوى ويضهر على شكل قائمة يمكن فتحه وغلقه من المستخدم
<summery></summery>
تاغ يستخدم مع الديتيل لتغيير كلمة الديتيل
<mark></mark>
يضع الكلمة في لون معين
<wbr />
هذا التاغ ينزل سطر يعمل عمل البريك لاين


********************************
 CSS Proparty
 *******************************

 BACKGROUND PROPARTY

background-color:
لون الخلفية
background-attachment:
موقع الخلفية
backgrund-repeat:
تكرار الخلفية
TEXT PROPARTY

color:
لون النص
letter-spacing:
المسافة بين الحروف
line-height:
المسافة بين الاسطر
text-align:
موقع النص
direction:
اتجاه النص
text-decoration:
وضع خط اسفل او اعلى او مسح الخط من النص
text-indent:
المسافة في اول النص
text-transform:
للتلاعب باحرف النص مثلا جعلها كبيره او صغيرة
word-spacing:
المسافة بين الكلمات
font-family:
نوع الخط
font-size:
حجم الخط
font-weight:
سماكة الخط
font-style:
ميلان الخط وتنسيقاته

*****************************************
element:hover
عند تمرير الماوس على العنصر ويطبق على كل العناصر

element:active
عند الضغط على العنصر ويطبيق على كل العناصر
******************************************


LIST PROPARTY

list-style-type:
تنسيق القوائم هذه الخاصية لحذف او اضافة النقطة قبل العناصر
list-style-position:
موقع النقطة قبل العنصر
lsit-style-image:
لوضع صوره مكان النقطة قبل العنصر

BORDER PROPARTY

border-width:
عرض الاطار
border-style:
نوع الاطار
border-color:
لون الاطار

لجعل الدف في الوسط نجعل المارجين اوتو
margin:auto

Display: inline/block/none
block
تظهر العناصر على شكل  سطر اي كل عنصر في سطر واحد
inline
جميع العناصر في سطر واحد
none
لاتظر العناصر

Posistion:fixed/relative/absolute/static
fixed
يبقى العنصر في مكان واحد مهما نزلت او صعدت في الصفحة
relativ
هو وضع العنصر بالنسة الى الاب له
اي انه ياخذ خواصه من الاوسم الاب ويستخدم كثيرا مع الوضع المطلق فيكون هو الاب له
absolute
هو وضع مطلق اي في اي مكان في الصفحة
لتحديد العنصر داخل مكان معين نضع الاب ريليتف فيكون الوضع مطلق لهذا الاب

float:left/right/none
left
تعويم العصر من اليسار ميزة التعويم هو عرض العناصر متجاوره لبعضها البعض
right
تعويم العنصر من اليمين
none
بدون تعويم

clear:left/right/both
مهم جدا يشتخدم عادا بعد التعويم لانهائه وبدء تعويم جديد
left
تنضيف من اليسار
right
تنظيف من اليمين
both
تنظيف لكلا الجانبين

overflow:visibale/heddin/scroll
القيمة الافتراضية مرئي
فائدتهة عندما يكون المحتواى اكبر من الدف نفسه

visibility:
هو اخفاء العنصر ولكن يبقى مكان العنصر المخفي محجوز عكس الدسبلي الذي يحذف مكان العنصر ايضا

z-idex:
هو نظام الطبقات في التنسيق
اي انه اعلى قيمة للانديكس يكون اول طبقة واقل قيمة هي اخر طبقة

Element:befor/after
لوضع محتوى قبل او بعد العنصر ويمكن تعديل هذا المحتوى بشكل طبيعي اي ان له جميع خواص التنسيقات

Element:first-letter
وهو للتحكم في اول حرف في العنصر وياخذ جميع خواص التنسيقات

Element:first-line
للتحكم في اول سطر في النص فقط وياخذ جميع خواص التنسيقات

Element:first-child
للتحكم في اول عنصر فقط

cursor
وهو تغيير شكل المؤشر في الصفحة لعننصر معين اي عند وضع المؤشر على العنصر يتغير شكل المؤشر

outline
نفس خواص االاطار الفرق بينهم ان الخط الخارجي لا ياخذ من مساحة العنصر وانما خارج العنصر

div > p
علامة الاكببر هنا معناها الابن المباشر فقط
اي انه سيطبق التنسيقات للابن المباشر لهذا الدف فقط
لو كان هناك ابن لبعنصر ال ب لا يطبق عليه الخواص

p + div
علامة الجمع معناها العنصر التالي
هنا معناها العنصر الذي يلي النص اذا كان دف طبق عليه التنسيقات

p ~ div
معناها الاشقاء لهذا الغنصر الذين من نوع دف غلى شرط ان  ياتون بعد العنصر الشقيق فقط

Elemen[proparty="value of proparty"]
للتحكم في عنصر معين يحمل هذا المتغير
معناها نسق العنصر الذي متغيره يساوي هذه القيمة
***************************************************
CSS 3
***************************************************
<i class="fa fa-book"></i>
لاستدعاء ايكونات فونت اوسم
**********************************
دعم المتصفحات
-webkit-
-moz-
-o-
-ms-
خواص توضع قبل الخاصيه في التنسيقات من اجل المتصفحات القديمة لكي تتعرف على هذه الخواص
_______________________________________________________________________________________________________________________________________________________
border-radius:
لعمل انحناء في النصر وهوياخذ الدعم للمتصفحاتالقديمه
_______________________________________________________________________________________________________________________________________________________
box-shadow: horizontal | vertical | blur | spread | color | inset;
box-shadow:10px 10px 10px 10px #ccc inset;
يعمل ضل للعنصر القيمة الاولى فيه هي الضل الافقي والقيمة الثانيه هو الظل العمودي والقيمة الاثالثه هو لون الظل
العشرة الثالثه هي قيمة البلور اي الضبابي للظل
العشرة الرابعه هية قيمة انتشار الظل
قيمة الاخيرة معناها الظل يكون للداخل وليس للخارج
ولعمل اكثر من ظل لنفس العنصر يفصل بينهما بعلامة الكومه
الظل ياخذ قيمة دعم المتصفحات
box-shadow:5px 5px 5px #090,
           10px 10px 10px #EEE,
           15px 15px 15px #00F;
_______________________________________________________________________________________________________________________________________________________
box-sizing:border-box;
html {
	box-sizing:border-box;
}
*:befor , *:after{
	box-sizing: border-box;
}
خاصيه مهمة جدا جدا جدا وضيفتها لا تضيف الحاشية او الحواف الداخلية للمساحة للعنصر الدرس الخامس في الزيرو ويب سكول لتنسيقات css3
ياخذ خاصيه دعم المتصفحات
_______________________________________________________________________________________________________________________________________________________

text-shadow:horizontal | vertical | blur | color;
لعمل ظل للكلمة نفس خواص ظل الصندوق ولكن مع اختلاف بسيط
ياخذ دعم المتصفحات
_______________________________________________________________________________________________________________________________________________________
text-overflow:ellipsis
وهو خاصيه لعمل ثلاث نقاط في الجملة لتنبية المستخدم ان هناك تكملة للجملة
_______________________________________________________________________________________________________________________________________________________
word-wrap:break-word;
خاصية لنزول سطر عن انتهاء المساحة المحدده
_______________________________________________________________________________________________________________________________________________________
transform:rotate(30deg);
تدوير العنصر وياخذ قية عددية
ياخذ دعم المتصفحات

transform:scale(2,2);
تكبير العنصر بمرتين القيمة الاولى للعرض والقيمة الثانية للطول
ياخذ دعم المتصفحات

transform: translate(x,y);
لتحريك العنصر
ياخذ دعم للصفحات

transform:skew(xdeg,ydeg);
انحراف العنصر ياخذ قيمتين
يدعم الصفحات

transform:translate(x,y);
تحريك العنصر
يدعم الصفحات

transform:matrix(a,b,c,d,x,y);
معناها سيكون تحته
transform:matrix(scaleX, skewY, skewX, scaleY, translateX, translateY);

transform:translate3d(x,y,z);
transform:scale3d(x,y,z);
tensform:rotateX();
tensform:rotateY();
tensform:rotateZ();
كل هذه الخواص هي ثري دي

perspactive:500px
هو المنظور الثري دي الذي يفعل هذه الخاصيه وبدونه لايفعل الثري دي اما الرقم فهو المسافة التي يحتويها محور الزت

transform-origin:
هية خاصيه تقبل قيمتين لتحديد نقطة الدوران او التكبير الى اخره

transform-style:preserve-3d
خاصية لدعم الثري دي للعنصر بدونها لايدعم الثري دي
تدعم الصفحات
_______________________________________________________________________________________________________________________________________________________
backface-visibility:hidden | visibile
هذه الخاصية تخفي ظهر العنصر عند الوران زهي خاصية تستخدم لعمل لفية للكارت و ما شابه ذلك
_______________________________________________________________________________________________________________________________________________________
background-size:cover;
هية خاصية لعمل تحجيم للخلفية نفسها مهمة جدا
يدعم الصفحات

background-clip:
وهي خاصيه لتحديد من اين يبدا الخلفية
تدعم المتصفحات

background-origin:
نفس الخاصية التي قبلها ولكن تستخدم مع الصور
تدعم الصفحات
_______________________________________________________________________________________________________________________________________________________
overflow-x:
overflow-y:
خاصيتين للتحكم في المحتوى الخارج عن النص
_______________________________________________________________________________________________________________________________________________________
resize: both | horizantol |virtecal
للتحكم في العنصر من المستخدم كطول وعرض
لاتشتغل على الانترنيت اكسبلورل
_______________________________________________________________________________________________________________________________________________________
opacity:
الشفافية الخاصه بالعنصر والعناصر التي بداخلها
ولتشغيل الشفافية في الانترنت اكسبلورر نستخدم التالي
filter:alpha(opacity=50);
************************************************************************
كل هذه الخواص للاب اي الكونتينر

display:flex;
خاصية لجعل العناصر متجاوره

flex-direction:
خاصية لاختيار اتجاه العنصر او كيف يظهر صف او عمود

flex-wrap:
خاصيه لاحتواء العنصر اي عندما يكون العنصر اكبر من الاب يقوم باضافه سطر جديد له

flex-flow: flex-direction , flex-wrap
وهوالمختصر للخاصيتين مع بعض اي انه ياخذ الخاصيتين مجتمعه في سطر واحد
_______________________________________________________________________________________________________________________________________________________
justify-content: space-between | space-around | center;
خاصية مهمة جدا
لقيمة الاولى تجعل مسافة بين متساوية بين العناصر والقيمة الثانيه تجعل مسافة متساوية حول العناصر والقيمة الثالثه توسط العناصر
_______________________________________________________________________________________________________________________________________________________
align-item:
لتحديد حجم العناصر داخل المحتوى وهية مهمة جدا جدا جدا الدرس29

align-content:
لتحديد مكان العناصر داخل المحتوى تشبه التي قبلها ولكن بطريقة مختلفه مهمة جدا جدا
وتستخدم مع الراب
*******************************************************************************************************************************************************
الخواص الخاصه بالابن اي في داخل الكونتينر

order:
خاصية لتحديد ترتيب العنصر

flex-grow:
خاصيه لعمل نمو للعنصر عند تكبير الاب له يكبر العنصر بمقدار انت تحدده

flex-shrink:
خاصيه لتقليص العنصر عند تصغير الكونتينر

flex-basis:
وهواكبر عرض للعنصر ويتقلص حسب عرض الكونتينر
ويكبر وفقا للمحتوى بداخله

flex: flex-grow | flex-shrink | flex-basis
هذا هو كود مختصر للثلاث خواص التي قبلها كلها في سطر واحد
*******************************************************************************************************************************************************
transition: proparty | duration | timing function | delay
اول قيمتين يجب كتابتها
القيمة الاولى هية الخاصية التي تريد ان تحدث لها التاثير
القيمة الثانية هي الوقت اللازم لعمل هذا التاثير
اذا اردنا ان نعمل تاثير اكثر منم خاصية في وقت واحد يفصل بينهما بكومة
القيمة الثالثه مطوله وسيتم شرحها تحت

transition-timing-function: ease | liner | ease-in | ease-out | ease-in-out | step() | cube-bezier()
القيمة الاولى تبدا تدريجيا وتنتهي تدريجيا
القيمة الثانية تبدا وتنتهي بمعدل ثابت
الثالثة تبدا تدريجيا وتنتهي ثابتا
القيمة الرابعه تبدا في الحال وتنتهي تدريجيا
القيمة الخامسة تبدا وتنتهي تدريجيا
القيمة السادسة تاخذ باراميتر من قيمتين القيمة الاولى هو كم خطوة لعمل التاثير اي انه سياخذ رقم والقيمة الثانيه هي هل التاثير يبدا اول كل خطوه او نهاية كل خطوه
القيمة السابعه تاخذ اربع قيم وهية عند البدء وقيمتين في المنتصف وقيمة في نهاية التاثير

transition-delay:
وهية عدد الثواني قبل بدء التاثير
*******************************************************************************************************************************************************
column-count:
وهو خاصيه تحول المحتوى الى اعمده ويجب كنابه دعم الصفحات كي تشتغل
column-gap:
وهية المسافه بين كل عمود وعمود

column-rule: Width | Style | Color
وهو وضع اطار لكل عمود وعرض الاطار ونوعه ولونه

column-width:
خاصيه عرض كل عمود

column-span:1;
خاصيه لجعل مثلا الهيدنغ قيل الاعمد نجل الواد كل بالانجليزي وهذه الخاصيه غير مدعومه في الفايرفوكس
*******************************************************************************************************************************************************
animation
اةل شي في الانميشن هو تعريف الانميشن اي وضع كي فريم له ويكتب كما يلي
@keyframe (name){
  frome{

  }
  to{

  }
}
داخل كل وحده تكتب الخواص التي تريد عمل انميشن لها وبعدها يجب ترعيف هذا الانميشن داخل العنصر المراد عمل انميشن له كالتالي
فمثلا
div{
  animation:(name of animation) | time | atretation | type of animation

يجب وضع دعم الصفحات للانميشن والكي فريم ضروري جدا
تكتب دعم الصفحات للكي فريم بعد الات @
اسمه الزيرو الدرس 39

animation-name: اسم الانميشن المكتوب في الكي فريم
animation-duration:الوقت الازم لعمل الانميشن
animation-iteration-count:عدد تكرار الانميشن
animation-direction:اتجاه الانميشن
animation-delay:التاخير قبل البدء بالانميشن
animation-fill-mode:عند اي كي فريم يتوقف بعد انتهاء الانميشن
animation-timing-function:نوع الانميشنهل هو خطي او سهل
animation-play-state:هل يعمل الانميشين او يتوقف وغالبا تستخدم مع الجافا سكربت او جي كويري

animation: name | duration | timing function | delay | iteration | direction | fill mode | play state
الكود المختصر للانميشن

*******************************************************************************************************************************************************
::selection
وهي خاصيه عند التحديد اي معناها عند تحديد العنصر بالماوس


*******************************************************************************************************************************************************
JAVA SCRIPT
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> FROM OSAMA AL ZERO <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
*******************************************************************************************************************************************************

var (x)name = (3)value;

var x = 6,
	y = 7,
	s = 3;
	
Case Sensitave

integer:
double:
boolean: true , false;
string : "value";
NAN = not a number
array : ["value1","value2","value3"];
object:{ firstName:"value",
		 lastName:"value2"
		}
for call object we use
object.firstName

syntx for if condition
if(condition){

}else{
}

Logical Operator

(!) NOT
(&&) AND 
(||) OR

we can use the function as a variable example:
var myFunction = function(){};

=============================================self invoke for function can use it by doing:========================================================

(function(){ // this function will call itself when page load
	alert('hello');
}());
===================================================================================================================================================
var varName = document.getElementById().value;

===================================================================================================================================================
isNaN()		
if (isNaN(varName)){
	alert('is not a number');
}
===================================================================================================================================================
 (switch)
switch(Expression){
	case value:
		somecode;
		break;
	case value:
		somecode;
		break;
	case value:
		somecode;
		break;
	default:
		somecode;
		break;
}
=====================================================================================================================================================
------------------------------------------------------------------------------------------------------------------------------------------------------
Events
1- onload 
	example: window.onload = function(){}
2- onclick 
	example: window.onclick = function(){}
3- ondbclick 
	example: window.ondbclick = function(){}
4- onchange | 
	example: window.onchange = function(){}
	
=========================================================================================================================================================
Array 
Create Array 
1- var varname = new Array(); // not recommend to use this way
	varname[0] = value;
	OR
   var varname = new Array(value1,value2...);
2- var varName = [value1 , value2 , value3 ...]; // recommanded to use this one
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Array Methods 
1- check if the variable is array or not we use the method isArray Example:				// recommanded
	if (Array.isArray(varName)){
		//do Something
	}
>>||> there is another way 
	if (varName.constructor === Array){
		//do Something
	}

2- Array length to get the length of an array mean how many element in the array 
	arrayName.length
3- convert the array to string we use (toString)  method
arrayName = arrayName.toString();

4- convert the array to string we use (toLocaleString) not so defferint from the toString 
arrayName = arrayName.toLocaleString();

5- join the element in the array
arrayName = arrayName.join();
convert the array to string but we can adjust the (coma , ) betwen them 
arrayName = arrayName.join("-");

6- to add item into array we use this idea (osama al zero (29))

arrayName[arrayName.length] = value;

7- push : to add item in array but it will add the item as last one
arrayName = arrayName.push(value);

8- 	unshift : to add item in array but it will add the item as first one
arrayName = arrayName.unshift(value);

9- to add item and remove we can use the splice method  (osama al zero (29))
arrayName = arrayName.splice(index , how many item to remove,value1 , value2 , value3);

10- to remove the last item from array we use the pop
arrayName = arrayName.pop();

<>>> to save the item that removed we stored into variable :
var lastItem = arrayName.pop();

11- to remove the first element in the array we can use shift
arrayName = arrayName.shift();

12- to sort the array be alpha-beta we use the method sort
arrayName = arrayName.sort();

13- to sort the array by revers way we use th reverse method
arrayName = arrayName.reverse();

14- to take a part of array we use the slice method
var newArrayName = arrayName.slice(start element , end element);
Example
var newArrayName = arrayName.slice(3,8);
if we want to take the element form bottom or reversed way we use negitav value
var newArrayName = arrayName.slice(-1,-5);

15- to combine two or more array we use concat method
var newArrayName = firstArrayName.concat(secondArrayName , thirdArrayName);

16- to get the number of element in the array we can use indexOf (osame al zero (33))
var varName = arrayName.indexOf(value , starting index(if needed));
_________________________________________________________________________________________________
<||>>>> if you search for element and it dosn't  exist the javaScript will return -1 			|
-------------------------------------------------------------------------------------------------
17- to get the number of element in the array reversed way we can use lastIndexOf (osame al zero (33))
var varName = arrayName.lastIndexOf(value , starting index(if needed));


==========================>>>>>>>>>>>>>> Method of String =================================================

1- typeof() to know what is the type of the variable data 

typeof(varName);

2- to convert the variable to string we use toString method
var varName = varName2.toString();

3-  to get the number of element in the String we can use indexOf
var varName = stringName.indexOf(value , starting index(if needed)); 

4-  to get the number of element in the string we can use indexOf 
var varName = StringName.lastIndexOf(value , starting index(if needed));

5- to search for word in string we use search method
varName = stringName.search(value); <>>> recommanded to use regular Exsprision in search

6- split : to split the string into small word or any thing we want (osama al zero (37))
   split : change the string to array and the split btewen them we define it when we split Example:
varName = stringName.split(" "); <>>> here we chose spease so it will split any word between spease if i say "i love you " ; it will split ["i","love","you"];

7- slice : to take a part of the string 
var varName = varName2.slice(start , end);

8- substr : to take a part of string the diffrent between slice and substr is thet the substr take length 
var varName = varName2.substr(start , length of the string);

9-  substring : to take a part of the string  the diffrent between slice and substring is if the start point bigger than end point it will swap between them 
var varName = varName2.substring(start , end);

10- charAt : to get a charcter in the string 
var varName = varName2.charAt(index number);

11- charCodeAt : to get the unicode of a charecter 
var varName = varName2.charCodeAt(index number);

12- to replace word to another we use replace method
var varName = varName2.replace(value  , new value);

13- to write string in unicode we use 
var varName = String.fromCharCode(unicode1,unicode2,unicode3....);

14- concat to combine more than 1 string
var varName = varName1.concat(varName2);

15- to lower case all the string
var varName = varName.toLowerCase();

16- to upper case all the string
var varName = varName.toUpperCase();

17- to cut the spease in the start and end of string we use trim
var varName = varName.trim();

18- to link we use
var varName = varName.link(name of website);

19- convert the string into number we use
		var myString = '123';
		var myNum = Number(myString);
		typeof myNum;
__________________________________________________________________________________________________________________________
Loop in JavaScript

1- fo(var varName = value(initial valur for start loop) ; condition ; increment or disecrement ){
		// some code
	}

2- for/in 	<>||>>>>> Important 	
	________________________________________________________________
 	|to loop inside the object we use for/in (osama al zero(45))	|
	|Example:														|
	|var varName;													|
	|for(varName in objectName){									|
	|		if(objectName.hasOwnproperty(varName)){					|
	|			console.log(varName +": "+ objectName[varName]);	|
	|		}														|
	|	}															|
	|																|
	-----------------------------------------------------------------

3- while 

var varName; 
while(condition){
	
	varName++;
}

4- do while it will excute at lest one time
var varName; 
do{
	
	varName++;
}while(condition);

5- lable , break , contenu	(osama al zero(48))

mainLoop: 	// this call lable
for(some thing){
	childloop:
	for(some thing){
		brake childloop;
	}
}

__________________________________________________________________________________________________________________________
Math method

1- ceil 										ياخذ قيم عشرية ويعطي الرقم التقريبي ولكن ياخذ دائما الرقم الاكبر 

var varName = math.ceil(4.3); 				//answer:5

2- floor 										 ياخذ رقم ويعطي الرقم التقريبي ودائما يعطي الرقم الاصغر

var varName = math.floor(4.3); 				//answer:4


3- round 										 تقريبي ودائما يعطي الرقم الاصغر

var varName = math.floor(4.3); 				//answer:4

4- min 											ياخذ مجموعه من الارقام ويعطي اصغر رقم

var varName = math.min(4,2,3,6,7,8);

5- max 											ياخذ مجموعه من الارقام ويعطي اكبر رقم

var varName = math.max(4,2,3,6,7,8);

6- random 										يعطي رقم عشوائي من صفر الى واحد مهم جدا مثال على استخدامه

var varName = math.random();
example of use:
var varName = math.random(math.floor( (x*10)+1 ) );

7- to convert any string to number it must the number before the string
parseInt(value)
example:
parseInt("20px") // return 20


________________________________________________________________________________________________________________________________
Regular Expression 

(osama al zero(55))

we write the ReEx in :
search | replace | split | test | match 
write like /our pattren /our attribute
( i ) for case insensetive
( g ) for global search 
( m ) for multi line search

example :
var str = "hello from java script",
	result = str.replace(/L/ig,"m");

Brackets use
[..] charecter
[^..] not charecter
[a-z] range small char
[A-Z] range capital char
[0-9] rang number
[^0-9] not rang number
[0-9a-z] double rang
[A-h] mean A to Z and a to h 

Example:
var str = "hello from java script",
	result = str.replace(/[0-9a-z]/g,"m");
	
Quintifire

letter+ => word contain one letter
letter{number} => word contain number of letter
letter{number,number} => word contain number of letter or number of letter
letter{number,} => word contain at least number of letter

______________________________________________________________________________________________________________________________________

Date 

1- var varName = new Date();			// get the current time 

2-  var theDate = new Date();
	var theMDate = theDate.getDate() 			// get the day of the month 1-31

3-  var theDate = new Date();
	var theMDate = theDate.getDay() 			// get the day of the week 0-6

4-  var theDate = new Date();
	var theMDate = theDate.getFullYear() 			// get the Full year

5-  var theDate = new Date();
	var theMDate = theDate.getHours() 			// get the hours 0-23
	
6-  var theDate = new Date();
	var theMDate = theDate.getMinutes() 			// get the minutes 0-59
	
7-  var theDate = new Date();
	var theMDate = theDate.getSecond() 			// get the second 0-59

8-  var theDate = new Date();
	var theMDate = theDate.getMillisecond() 			// get the millisecond 0-999
	
9-  var theDate = new Date();
	var theMDate = theDate.getTime() 			// get the number of millisecond from 1970 until now
	
10-  var theDate = new Date();
	var theMDate = theDate.getTimezoneOffset() 			// get the diffrent between UTC and LocalTime
	
11-  var theDate = new Date();
		var theMDate = theDate.setDate(day[require])

 var theDate = new Date();
	var theMDate = theDate.setFullYear(year[require],month[optional],day[optional])

 var theDate = new Date();
	var theMDate = theDate.setHours(hours[require])

 var theDate = new Date();
	var theMDate = theDate.setMinutes(minutes[require])

 var theDate = new Date();
	var theMDate = theDate.setSecond(second[require])

 var theDate = new Date();
	var theMDate = theDate.setMillisecond(Millisecond[require])

 var theDate = new Date();
	var theMDate = theDate.setMonth(month[require],day[optional])
	
 var theDate = new Date();
	var theMDate = theDate.toISOString()  // convert the date to iso look

 var theDate = new Date();
	var theMDate = theDate.toDateString()  // convert the date  to string 

 var theDate = new Date();
	var theMDate = theDate.toTimeString()  // convert the date to time only
	
=============================================================================================================================================
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> DOM (Document Object Model)<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

1- document.getElementById('id name')  // تجلب العنصر الذي له ايدي كذا 


2- document.getElementsByTagName('tag name')  // ترجع مصفوفه بالعناصر التي لها هذا التاغ


3- document.getElementsByClassName('class name')  //  مصفوفه بالعناصر التي لها هذا الكلاس وغير مدعمة بالانترنيت اكسبلورر


4- document.querySelectorAll('class name or tag or both')  //  مصفوفه بالعناصر التي لها هذا التاغ او الكلاس وغير مدعمة بالانترنيت اكسبلورر

5- document.title		// get the title of the page

6- document.images		// get array of all images in the page

7- document.forms		// get array of all forms in the page

8- document.body		// get the content of the body

9- document.anchors		// get array of all the <a tag without the href > in the page

10- document.links		// get array of all <a tag with href > in the page

11- >innerText // not standard not recommanded

	>outerText // not standard not recommanded
	
	>innerHTML
	//get html content
	element.innerHTML
	
	>outerHTML
	
	>textContent
	//get the text content 
	element.textContent
	
12- change the id attribute we use 
	var myelement = document.querySelector('element');
	myelement.id = 'any value';

13- change the class attribute we use 
	var myelement = document.querySelector('element');
	myelement.className = 'any value';
========================================================|
14- change any element attribute we use 				|
	var myelement = document.querySelector('element');	|
	myelement.attribute = 'any value';					|
========================================================|	


15- another way to change the attribute and get it by 
	
	Element.getAttribute('name of att')
	Element.setAttribute('name of attribute' , ' the value of attribute')
<>>> if the attribute dosn't exist the javascript will create it then but the value in it

16- Element.hasAttribute('name of att')				// return true or false
	Element.removeAttribute('name of attribute')			// remove existing attribute
	

17- 	Element.classLisst			// return array for list of the classes
		Element.classLisst.contains('name of class') 		// return true or false it will check if the element have the class name or not
		Element.classLisst.item(index of class)				// return spesific class by it own index 



	

	






	
	








	






___________________________________________________________________________________________________________________________
From verious Tetourals
===========================================================================================================================
Case Sensitave
حساسه للحروف

المتغيرات  variables

var varName = value;
الصيغه العامة للمتغير
انواع البيانات في الجافاسكربت

integer
double
boolean
string
NAN = not a number
array
object

const MYCONSTANT;				الثوابت في جافاسكربت اسمها تكتب بحروف كبيره ولا يمكن تغيير قيمتها

let						متغير ولكن بمدى محدود يستخدم داخل الدوال غالبا لكي لا يتداخل المتغير مع متغير اخر داخل الداله بنفس الاسم 
example:

function doSomthing(){
	let x = 3;
	if(x){
		let x = 2;	
	}
}

window.onload = function(){}		داله تستخدم عند تحميل الصفحة ماذا تريد ان يحصل
console.log();					داله للكتابه في الكونسل

document.getElementById("nameOfElement")	داله لجلب عنصر من الصفحة
document.getelementByTagName("NameOfTag")	 داله لجلب الوسم وتستخدم مع الداله اعلاه في الدوم وتكون كالتالي ويرجعها كمصفوفه
document.getElementById("home").getElementByTagName("li");	مثلا
document.getElementByClassName();				داله تجلب كل عنصر في الصفحه يحمل كلاس بهذا الاسم يرجعها كمصفوفه
document.querySelector(".nav a");				داله لجلب اول عنصر يحمل هذا النست كلاس
document.querySelectorAll(".nav a");				يرجع كل العناصر بهذا النست كلاس
myElement.getAttrribute("Name Of Att", "value");				لجلب خاصية في عنصر معين
myElement.setAttrribute("Name Of Att", "value");				لوضع خاصيه او تغيير قيمة مسبقه لعنصر
_______________________________________________________________________________________________________________________________________________________

لعمل سلايد شو للصور في الجافا سكربت

// Two methods for timers - setTimeout and SetInterval (single / repeating)

function simpleMessage() {
    alert("This is just an alert box");
}

// settimeout is in milliseconds
//setTimeout(simpleMessage,5000);

var myImage = document.getElementById("mainImage");

var imageArray = ["_images/overlook.jpg","_images/winery_sign.jpg","_images/lunch.jpg",
                  "_images/bigSur.jpg","_images/flag_photo.jpg","_images/mission_look.jpg"];
var imageIndex = 0;

function changeImage() {
    myImage.setAttribute("src",imageArray[imageIndex]);
    imageIndex++;
    if (imageIndex >= imageArray.length) {
        imageIndex = 0;
    }
}

// setInterval is also in milliseconds
var intervalHandle = setInterval(changeImage,5000);

myImage.onclick =  function() {
    clearInterval(intervalHandle);
};

_______________________________________________________________________________________________________________________________________________________
لعمل عنصر جديد في الجافاسكربت نتبع ما يلي :
1- انشاء العنصر قبل كل شي ننشيء العنصر اولا ومن ثم نضمنه 
var myNewElement = document.createElement("li");
2- نضمنه مع القائمة فيكون كالتالي
myElement.appendChild(myNewElement);
3 اضافة محتوى له فيكون كالتالي
myNewElement.innerHTML = "hellooooo";

هنالك طريقة افضل لعمل المحتوى وهي 
1- انشاء المحتوى 
var myText = document.createTextNode("Helloooooo");
2 تضمينه مع العنصر
myNewElement.appendChild(mtText);

طريقه اخرى لعمل عنصر جديد وهي 
var myNewElement = document.createElement("li");
var seconElement = myElement.getElementsByTagName("li")[1];
myElement.insertBefore(myNewElement,seconElement);

_______________________________________________________________________________________________________________________________________________________

for more informations visit : (https://developer.mozilla.org/en-US/docs/Web/API/document)
onclick event 				تستخدم لعمل شيء واحد فقط اما اذا اردنا عمل اكثر من شيء في نفس الوقت نستخدم 
nameOfvar.addEventLisnter("nameOfEvent",functionName,False);

for more informations visit : (https://developer.mozilla.org/en-US/docs/Web/API/event)

varName.preventDefault();			هذه الداله تلغي القيمة الافتراضيه للعنصر
كتابة الداله في الجافاسكربت 
function functionName(){}
اللوب في جافا سكربت
for(i=0;i<20;i++){}
المصفوفات في جافا سكربت
var color= ["red","green","blue"];
المصفوفات في الجافا سكربت هي (object)وتعامل معامله الاوبجك اي ان لها خصائص  وافعال مبنيه في الجافا

arrayName.reverse();			داله لعكس المصفوفه فما هو اول يصبح اخير والعكس
arrayName.shift();			داله لحذف اول عنصر في المصفوفه
arrayName.unshift("yallow");			لاضافه عنصر او اكثر في بداية المصفوفه
arrayName.pop();				لحذف اخر عنصر في المصفوفه
arrayName.push("black");			لاضافه عنصر او اكثر في اخر المصفوفه
arrayName.splice(position , number);			داله لحذف عنصر او اكثر نحن نحدده فمثلا:
position هو مكان العنصر اي رقمهة في المصفوفه
number هو كم عنصر مراد حذفه
arrayName.slice();				داله تاخذ نسخه من المصفوفه وتستخدم مباشره مع الدوال او يمكن تخزينها في متغير
arrayName.indexOf("elementName",numberThatWeStart);			داله تجلب لنا كم عنصر متبقي من الرقم الذي ادخلناه الى العنصر المراد  فمثلا:
arrayName.indexOf("green",2);	
arrayName.join();				داله لجلب اسماء العناصر في المصفوفه وتاخذ براميتر اذا اردنا تغيير الكومه الى شيء اخر فتصبح
arrayName.join("|");

هناك ثلاث انواع من الدوال في جافاسكربت 
1- named function		وهي داله تحمل اسم وتنفذ عند الاستدعاء
example:
function someFunction(){
	console.log("hello");
}
2- anynmous function 		داله لا تحمل اسم وغالبا تكون داخل متغير او داله اخرى 
example:
var EX = function(){
	console.log("anynoumos");
}
for call the function we use 
EX();
3- immeditly invoke function 		داله  تنفذ عند بدء الصفحه في التحميل
example:
var EX = (function(){
	console.log("anynoumos");
})(argument if that we have it)
for call the function 
console.log(EX); without the pranthses


لانشاء كائن في جافاسكربت هي كمايلي:
var course = new Object();		ثم بعدها نضع الخصائص والافعال 
course.name = "hiii";
هناك طريقه مختصره لانشاء كائن:
var course = {
	name : "hiii",
	view : 0,			
	upDate : function(){}			لانشاء داله داخل الكائن
}
الكائن في الجافاسكربت له كل خصائص الكائن في لغات البرمجه الثانية اي ان له (constractor) ومتغيرات ودوال.....الخ
لانشاء كونستركتور ففي الجافا سكربت كما يلي:
function Course(title,view,level){
	this.title = title;
	this.view = view;
	this.level = level;
	this.upDate = function(){
		return ++this.view;
	};
}

var course01 = new Course("java",3,2);
console.log(course01);

يمكن عمل مصفوفه من الكائنات مثلا:
var courses = [
	new Course("java",3,2),
	new Course("javaScript",5,12)
];

brackt notation 
course["title"]				استدعاء خاصيه او داله في الكائن وهي نفس عمل الدوت ولكن في بعض الاحياء الدوت تظهر خطا فنستخدم هذه الخاصيه

Closuers					معناها اذا كان لدينا داله داخل داله ومخزنه داخل متغير فيجب وضع اقواس الباراميتر حتى لو كان هنالك رتيرن للقيمة
example:

function arthmatic(){
			var a = 4;
			var b= 3;
			function sum(){
					var sum = a+b;
					return sum;
				}
			return sum();
	}

var math = arthmatic();				هنا يجب وضع الاقواس بدونها لن تعمل الداله 






*******************************************************************************************************************************************************
Data Base
*******************************************************************************************************************************************************
لماذا نحتاج قاعده بيانات ؟
هناك مشاكل اذا لم يكم لدينا قاعده بيانات وهي:
problem:
1- size of data
2- Ease of Updating
3- Accuracy
4- Security
5- Redundancy(وفره)
6- Importance
قاعده البيانات عبارة عن جداول لكل جدول اعمده وصفوف لكل عمود نوع محدد من البيانات واسم الجدول مثلا الاسم الايميل العنوان....الخ
الاساس في عمل قاعده البيانات هو الصفوف فنحن نحذف او نحدث او نضيف صفوف اما الاعمده فهي اسماء وانواع البيانات في قاعده البيانات

(key)هو مفتاح فريد من نوعه يعطى لعمود معين ولا يمكن لهذا العمود ان يتكرر فيه رقم معين معناها القيمه المدخله لا يمكن ان تتكرر
ويسمى (primary key)
العلاقة بين الجداول تكون عن طريق المفاتيح او ال(keys) 
لو نفرض ان لدينا جدولين جدول للزبائن وجدول للمنتجات فان لكل جدول منها (primary key) واذا كانت هناك علاقة بين الجدولين نربطها عن طريق هذا المفتاح فمثلا هنا العلاقة تكون بين رقم الزبون وجدول المنتجات وعليهة يكون رقم الزبون جدول جديد في جدول المنتجات ويسمى هذا العمود (foreign key) ويمكن ان يتكرر هذا الرقم اي انه ليس رقما فريدا والعلاقة بينهما تسمى (one to many) اي انه زبون واحد ممكن ان ياخذ اكثر من منتج فيتكرر رقم الزبون ولكن رقم المنتج لا يتكرر كورس سايمون في ليندا يشرحها بالتفصيل...

يمكن ان يكون عمودين هما يمثلان المفتاح وتسمى (compasit Key)

العلاقة الثانية هي علاقة (many-to-many)
هذه العلاقة لايمكن صيغتها مباشرا فلا يمكن وضع عمودين في الجدول الثاني لوصف نفس الشخص فمثلا لو كان لدينا جدول للكتب يحتوي على عمود هو المفتاح الفريد 
ولدينا جدول ثاني يحتوي على الكاتب ويحتوي على عمود رقم الكاتب وهو المفتاح الفريد عنها يمكن ان يكون كتاب واحد لاكثر من كاتب هنا العلاقة اختلفت 
الحل: هو عمل جدول ثالث فية رقم الكتاب ورقم الكاتب على شكل (forign key) ويربط كل منهما بالجدول الاصلي له وتكون العلاقة بينهما هية(one-to-many)
بهذه الطريقه توصف هذه العلاقة في قواعد البيانات
في حاله الجدول الجسر الذي يربط الجدولين يكون العمودين معا هما (primary key) وبهذا يستخدم (compasit Key)
_______________________________________________________________________________________________________________________________________________________

قبل البدء في بناء قاعده البيانات هناك اسئلة يجب الاجابة عليها :
اولا: ما الهدف من بناء هذه القاعده للبيانات او ماهو مضمون بنائك لها؟
ثانيا : ما الذي تملكه مسبقا؟ ( فمثلا لدي منتج او زبائن او لدي قاعده بيانات قديمة واذا كانت لديك قاعده بيانات ما المشكلة بها )
ثالثا: ما هي المدخلات ؟ (مثلا زبون منتج او طلب)               * الافضل تسمية الجداول مفرده مثلا زبون وليس زبائن

انواع البيانات في قواعد البيانات (نوع البيانات المدخله للاعمده مثلا الاسم او العمر .....الخ)

1- integer
2- charcter
3- binary
4- date
*عند وضع العمود يقبل حروف الاحسن وضع الترميز يونيكود
عندما نكتب العمود (not Null) معناها اجباري ملئ هذا العمود
_______________________________________________________________________________________________________________________________________________________
عند حذف اي عنصر يلي :
1- عند حذف عنصر من جدول معين فان الذي سيحدث هو يعتمد على ما وضعته انت من قواعد فمثلا بعض قواعد البيانات تحذف كل صف متعلق بهذا الصف 
فمثلا لو كان لدينا جدولين للزبائن والمنتجات وحذفنا احد الزبائن فسيحذف كل صف متعلق في هذا الزبون في جدول المنتجات وتسمى هذه العملية(cascading delete)

2- العملية الثانية هي انهو عند حذف زبون فسيتم افراغ اسم الزبون في جدول المنتجات ولا يحذف الصف كله ويوضع مكانها (null) وتسمى هذه العملية(cascading nullify)

3- العملية الثالثة وهي الاحسن او الموصى بها وهي موجوده في اغلب قواعد البيانات وهي عند حذف زبون فلا يسمح لك بذلك الا اذا حذفت كل المنتجات المتعلقة به اولا ثم بعد ذلك يسمح لك بحذف الزبون وتسمى هذه العمليه (no action)
_______________________________________________________________________________________________________________________________________________________
(normalazation Data Base) 

هنالك خطوات يجب اتباعها عند بناء قاعده بيانات وتقسم الى ثلاث خطوات 
first normal form(1NF)----> second normal form(2NF)-----> third normal form(3NF)

القاعده الاولى وهي (1FN) :كل جدول يجب ان يحتوي على قيمة واحده فقط ولا يسمح بتكرار الاعمده (اي كتابة نفس اسم العمود مع رقم لكي يميزها)
الحل : هو عمل جدول جديد خاص وتكون العلاقة بينهما (one-to-many)

القاعدة الثانية (2NF) : اي عمود (non-key) يجب ان يكون غير معتمد على  ال(primary key) تظهر هذه الحاله فقط اذا كان (compasit key)
الحل : انشاء جدول جديد يربط العمودين المتشابهين او المعتمدين واحد على الاخر بالاسم ويربط مع الجدول في علاقة (one-to-many)

القاعدة الثالثة (3NF) : لا يجب ان يعتمد اي عمود (non-key) على اي عمود اخر (non-key) بمعنى اخر لايمكن معرفة اي محتوى لعمود من خلال عمود اخر
الحل : انشاء جدول جديد ويربط مع الجدول الرئيسي وتكون العلاقة بينهما (one-to-many)
_______________________________________________________________________________________________________________________________________________________

طريقة كتابة الاوامر في (SQL)
1- SELECT                        معناها حدد او اقرأ
تاتي بعدها اسم العمود									SELECT colum
2- FROM							معناها من وتاتي بعدها اسم الجدول 
مثلا :
SELECT coulom FROM table;

3- * معناها كل الصفوف
4- WHERE معناها عندما   WHERE ID = 323;   اي انها شرطية 
اذا كان لدينا اكثر من قاعده بيانات واردنا ان نحدد جدول معين وكان اسم الجدول في اكثر من قاعده هنا نستخدم اسم قاعده البيانات فمثلا
SELECT *
FROME DataBaseName.TbleName(HumenResource.Employee)
WHERE salary>2000;
5- اذا اردنا تحديد اكثر من شرط يكون كالتالي:
WHERE salary>3000 AND(OR) Name='ahmed';			فهنا نستخدم و او كتابة وليس رمزا
6- يمكن استخدام : 
WHERE Department IN ('salary','marketing');
7- LIKE تستخدم هذه الخاصية مع (WHERE) وتكتب كالتالي:
WHERE lastName LIKE 'ameen%'; 				علامة النسبة هنا يعني الاسم واي اسم بعدها مجرد ان يكون الاسم الاخير يبدا بامين فهذا ما نريده
8- IS 
WHERE name IS NULL 			معناها اذا كان الاسم فارغ وتستخدم غالبا مع (NULL)
9- ORDER BY 				وهي لترتيب كما يلي 
SELECT salary 
FROM employee 
ORDER BY salary DESC; 
DESC هنا معناها من الاكبر الى الاصغر وافتراضيا تاتي من الاصغر الى الاكبر فلا حاجه لكتابتها 
10- GROUP BY 	تستخدم لتحديد مجموعه معينه فمثلا
SELECT COUNT(*)
FROME PRODUCT
GROUP BY color;
11- اذا ارنا جلب معلومات لاخر من جدول نكتب التالي 
SELECT Fname,Lname,HireDate,Employee.id,DepartmentID
FROM Employee INNER JOIN Department
ON Employee.DepartmentID = Department.DepartmentID 

(INNER JOIN ) معناها اجلب البيانا المتطابقة فقط اي اذا كان احد هذه البيانات لا يحتوي على قيمة فلا يجلبه 

SELECT Fname,Lname,HireDate,Employee.id,DepartmentID
FROM Employee LEFT(RIGHT) OUTER JOIN JOIN Department
ON Employee.DepartmentID = Department.DepartmentID 

(LEFT OUTER JOIN) 	معناها حتى لو لم يكن هنالك تطابق فسيجلب البيانات مع ابقاء الخانه الفارغه (null)
11- INSERT		لادخال البيانات 

INSERT INTO TableName
	(column1,column2,column3)
	VALUE(value1,value2,value3)

12- UPDATE TableName  	تعديل حقل معين
	SET column = value
	WHERE Condition		الشرط هنا مطلوب في حاله لم يكن هنالك شرط فسيعدل كل لعمود 
13- DELETE FROM TableName 			للحذف 
	WHERE condition
14- CREATE 			لخلق جدول نتبع مايلي 
    CREATE Employee
	(EmployeeID INTEGER PRIMARY KEY,
	 FirstName VARCHAR(30)NOT NULL,
	 LastName VARCHAR(25) NOT NULL,
	 Salary INTEGER ,
	 DepartmentName VARCHAR(20) NULL
	);
15- ALTER TABLE			لاضافة عمود لجدول
	ALTER TABLE Employee
		ADD Email VARCHAR(50);
16-DROP 			لحذف جدول
	DROP Employee; 
